# Managed by Ansible
# Don't edit !

import os

# SECURITY WARNING: keep the secret key used in production secret
SECRET_KEY = '{{ mailman3_django_secret_key }}'

# SECURITY WARNING: don't run with debug turned on in production!	
{% if mailman3_django_debug %}
DEBUG = True
{% else %}
DEBUG = False
{% endif %}

# Mailman core settings (postorius/hyperkitty will need to interact over rest api)
MAILMAN_REST_API_URL = 'http://localhost:8001/'
MAILMAN_REST_API_USER = '{{ mailman3_rest_api_user }}'
MAILMAN_REST_API_PASS = '{{ mailman3_rest_api_pass }}'
MAILMAN_ARCHIVER_KEY = '{{ mailman3_archiver_key }}'
MAILMAN_ARCHIVER_FROM = ('127.0.0.1', '::1')

ALLOWED_HOSTS = [
    "localhost", # Archiving API from Mailman
    "127.0.0.1", # httpd proxy
    "{{ mailman3_httpd_hostname }}", # external fqdn through proxy
]
	
ROOT_URLCONF = 'urls'

#: Current Django Site being served. This is used to customize the web host
#: being used to serve the current website. For more details about Django
#: site, see: https://docs.djangoproject.com/en/dev/ref/contrib/sites/
SITE_ID = 1

TIME_ZONE = 'UTC'
LANGUAGE_CODE = 'en-us'
USE_I18N = True
USE_L10N = True 
USE_TZ = True

# Authentication settings
LOGIN_URL          = 'account_login'
LOGIN_REDIRECT_URL = 'hk_root'
LOGOUT_URL         = 'account_logout'


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'postorius',
    'hyperkitty',
    'compressor',
    'django_mailman3',
    'django_gravatar',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    #'allauth.socialaccount.providers.openid',
    #'django_mailman3.lib.auth.fedora',
    #'allauth.socialaccount.providers.github',
    #'allauth.socialaccount.providers.gitlab',
    #'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.facebook',
    #'allauth.socialaccount.providers.twitter',
    #'allauth.socialaccount.providers.stackexchange',
    # Dev only dependencies. Do not include in any production site.
    #'debug_toolbar',
    #'requests_panel',
)

MIDDLEWARE = [
    #'allauth.account.middleware.AccountMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # NOTE: Do not include DebugToolbarMiddleware in any production site.
    #'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django_mailman3.middleware.TimezoneMiddleware',
    'postorius.middleware.PostoriusMiddleware',
]


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.i18n',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django_mailman3.context_processors.common',
                'postorius.context_processors.postorius',
            ],
        },
    },
]

STATIC_URL = '/static/'
# To be created and 'mailman-web collectstatic' would copy files there
STATIC_ROOT = '{{ mailman3_static_root }}'
# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
    'compressor.finders.CompressorFinder',
)


# How to connect to database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '{{ mailman3_django_db_name }}',
        'USER': '{{ mailman3_django_db_user }}',
        'PASSWORD': '{{ mailman3_django_db_pass }}',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

HAYSTACK_CONNECTIONS = {
  'default': {
      'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
      'PATH': '/tmp/fulltext_index',
   }
}

# https://docs.mailman3.org/en/latest/config-web.html#configure-postorius-hyperkitty
COMPRESS_ENABLED = False
#COMPRESS_PRECOMPILERS = ()
# django-compressor
# https://pypi.python.org/pypi/django_compressor
#
COMPRESS_PRECOMPILERS = (
   ('text/less', 'lessc {infile} {outfile}'),
   ('text/x-scss', 'sassc -t compressed {infile} {outfile}'),
   ('text/x-sass', 'sassc -t compressed {infile} {outfile}'),
)
COMPRESS_OFFLINE = True

# We don't want to only show lists for domain matching httpd webserver name
FILTER_VHOST = False


# Django tasks queue
# https://docs.mailman3.org/en/latest/config-web.html#running-the-task-queue
Q_CLUSTER = {
   'retry': 360,
   'timeout': 300,
   'save_limit': 100,
   'orm': 'default',
}

# Enabling memcached cache
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache',
        'LOCATION': '127.0.0.1:11211',
    }
}
